{"version":3,"sources":["../src/unevacuate.js"],"names":["restoreEvacuatedCode","path","commentType","evacuatedTagRegex","container","remainingComments","evacuatedNodes","commentsProp","comments","node","comment","value","commentText","test","json","replace","JSON","parse","leadingComments","push","e","console","error","length","evacuatedNodes_","reverse","evacuatedNode","pushContainer","insertBefore","insertAfter","unevacuateFeaturesPlugin","api","options","assertVersion","evacuatedTag","RegExp","name","visitor","ClassMethod","next","getSibling","key","trailingComments","ClassBody"],"mappings":"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","sourcesContent":["import { declare } from '@babel/helper-plugin-utils';\nimport { stripLocationFromNode } from './util';\n\n/**\n *\n */\nfunction restoreEvacuatedCode(path, commentType, evacuatedTagRegex, container) {\n  let remainingComments = [];\n  const evacuatedNodes = [];\n  const commentsProp = `${commentType}Comments`;\n  const comments = path.node[commentsProp] || [];\n  for (const comment of comments) {\n    const { value: commentText } = comment;\n    if (evacuatedTagRegex.test(commentText)) {\n      const json = commentText.replace(evacuatedTagRegex, '');\n      try {\n        const node = JSON.parse(json);\n        node.leadingComments = [\n          ...remainingComments,\n          ...(node.leadingComments || [])\n        ];\n        remainingComments = [];\n        evacuatedNodes.push(node);\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      remainingComments.push(stripLocationFromNode(comment));\n    }\n  }\n  if (evacuatedNodes.length > 0) {\n    path.node[commentsProp] = remainingComments;\n    const evacuatedNodes_ =\n      commentType === 'leading' ? evacuatedNodes : evacuatedNodes.reverse();\n    for (const evacuatedNode of evacuatedNodes_) {\n      if (container) {\n        path.pushContainer(container, evacuatedNode);\n      } else {\n        if (commentType === 'leading') {\n          path.insertBefore(evacuatedNode);\n        } else {\n          path.insertAfter(evacuatedNode);\n        }\n      }\n    }\n  }\n}\n\n/**\n *\n */\nconst unevacuateFeaturesPlugin = declare((api, options) => {\n  api.assertVersion(7);\n  const { evacuatedTag = '@evacuated' } = options;\n  const evacuatedTagRegex = new RegExp(`^\\\\s*@preserve\\\\s+${evacuatedTag}\\\\s+`);\n  return {\n    name: 'transform-unevacuate-features',\n    visitor: {\n      ClassMethod(path) {\n        restoreEvacuatedCode(path, 'leading', evacuatedTagRegex);\n        const next = path.getSibling(path.key + 1);\n        if (next.node) {\n          path.node.trailingComments = [];\n        } else {\n          restoreEvacuatedCode(path, 'trailing', evacuatedTagRegex);\n        }\n      },\n      ClassBody(path) {\n        restoreEvacuatedCode(path, 'inner', evacuatedTagRegex, 'body');\n      }\n    }\n  };\n});\n\nexport default unevacuateFeaturesPlugin;\n"],"file":"unevacuate.js"}